{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '51015530-5e955df2a81e83cea790abd16';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const fetchImages = async (query, page = 1, perPage = 12) => {\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n    page,\n    per_page: perPage,\n  });\n\n  const url = `${BASE_URL}?${params.toString()}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data; \n  } catch (error) {\n    throw new Error(`Failed to fetch images: ${error.message}`);\n  }\n};\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nlet lightbox;\n\nexport const renderGallery = images => {\n  const gallery = document.querySelector('.gallery');\n  const markup = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<div class='photo-card'>\n        <a href=\"${largeImageURL}\">\n          <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"\"lazy/>\n        </a>\n        <div class=\"info\">\n          <div>\n            <p>Likes</p>\n            <p>${likes}</p>\n          </div>\n          <div>\n            <p>Views</p>\n            <p>${views}</p>\n          </div>\n          <div>\n            <p>Comments</p>\n            <p>${comments}</p>\n          </div>\n          <div>\n            <p>Downloads</p>\n            <p>${downloads}</p>\n          </div>\n        </div>\n      </div>`\n    )\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n\n  if (!lightbox) {\n    lightbox = new SimpleLightbox('.gallery a', {\n      captionsData: 'alt',\n      captionDelay: 250,\n    });\n  } else {\n    lightbox.refresh();\n  }\n};\n\nexport const clearGallery = () => {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = '';\n};\n\nexport function showLoader() {\n  loader.style.display = 'inline-block';\n}\n\nexport function hideLoader() {\n  loader.style.display = 'none';\n}","import { fetchImages } from './js/pixabay-api';\nimport { renderGallery, clearGallery } from './js/render-functions';\nimport { showLoader, hideLoader } from './js/render-functions';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst loader = document.querySelector('.loader');\n\n\nlet currentPage = 1;\nlet currentQuery = '';\nconst perPage = 12;\n\nform.addEventListener('submit', onSearch);\n\nasync function onSearch(e) {\n  e.preventDefault();\n  const query = e.currentTarget.elements.search.value.trim();\n\n  if (!query) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Search query cannot be empty!',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  currentQuery = query;\n  currentPage = 1;\n  clearGallery();\n  showLoader(); \n\n  try {\n    const data = await fetchImages(currentQuery, currentPage, perPage);\n\n    if (data.hits.length === 0) {\n      iziToast.error({\n        title: 'Error',\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        position: 'topRight',\n      });\n      return;\n    }\n    renderGallery(data.hits);\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: `Something went wrong: ${error.message}`,\n      position: 'topRight',\n    });\n  } finally {\n    hideLoader();\n  }\n}\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","params","url","axios","error","lightbox","renderGallery","images","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","clearGallery","showLoader","hideLoader","form","currentPage","currentQuery","onSearch","e","iziToast","data"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEJC,EAAc,MAAOC,EAAOC,EAAO,EAAGC,EAAU,KAAO,CAClE,MAAMC,EAAS,IAAI,gBAAgB,CACjC,IAAKN,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,KAAAC,EACA,SAAUC,CACd,CAAG,EAEKE,EAAM,GAAGN,CAAQ,IAAIK,EAAO,SAAQ,CAAE,GAE5C,GAAI,CAEF,OADiB,MAAME,EAAM,IAAID,CAAG,GACpB,IACpB,OAAWE,EAAO,CACd,MAAM,IAAI,MAAM,2BAA2BA,EAAM,OAAO,EAAE,CAC9D,CACA,ECrBA,IAAIC,EAEG,MAAMC,EAAgBC,GAAU,CACrC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAASF,EACZ,IACC,CAAC,CACC,aAAAG,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACQ;AAAA,mBACWL,CAAa;AAAA,sBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,iBAK/BC,CAAK;AAAA;AAAA;AAAA;AAAA,iBAILC,CAAK;AAAA;AAAA;AAAA;AAAA,iBAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,iBAIRC,CAAS;AAAA;AAAA;AAAA,aAI1B,EACK,KAAK,EAAE,EAEVR,EAAQ,mBAAmB,YAAaC,CAAM,EAEzCJ,EAMHA,EAAS,QAAO,EALhBA,EAAW,IAAIY,EAAe,aAAc,CAC1C,aAAc,MACd,aAAc,GACpB,CAAK,CAIL,EAEaC,EAAe,IAAM,CAChC,MAAMV,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,EACtB,EAEO,SAASW,GAAa,CAC3B,OAAO,MAAM,QAAU,cACzB,CAEO,SAASC,GAAa,CAC3B,OAAO,MAAM,QAAU,MACzB,CC7DA,MAAMC,EAAO,SAAS,cAAc,OAAO,EAC5B,SAAS,cAAc,SAAS,EAG/C,IAAIC,EAAc,EACdC,EAAe,GACnB,MAAMvB,EAAU,GAEhBqB,EAAK,iBAAiB,SAAUG,CAAQ,EAExC,eAAeA,EAASC,EAAG,CACzBA,EAAE,eAAc,EAChB,MAAM3B,EAAQ2B,EAAE,cAAc,SAAS,OAAO,MAAM,KAAI,EAExD,GAAI,CAAC3B,EAAO,CACV4B,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,gCACT,SAAU,UAChB,CAAK,EACD,MACJ,CAEEH,EAAezB,EACfwB,EAAc,EACdJ,EAAY,EACZC,IAEA,GAAI,CACF,MAAMQ,EAAO,MAAM9B,EAAY0B,EAAcD,EAAatB,CAAO,EAEjE,GAAI2B,EAAK,KAAK,SAAW,EAAG,CAC1BD,EAAS,MAAM,CACb,MAAO,QACP,QACE,2EACF,SAAU,UAClB,CAAO,EACD,MACN,CACIpB,EAAcqB,EAAK,IAAI,CAC3B,OAAWvB,EAAO,CACdsB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBtB,EAAM,OAAO,GAC/C,SAAU,UAChB,CAAK,CACL,QAAG,CACCgB,EAAU,CACd,CACA"}